# Database connection
database:
  host: 'localhost'
  port: 5432
  database_name: 'ohdsi'
  username: 'postgres'
  # Comment out password to provide at runtime
  # password: ''

# The schema names of the OMOP CDM (target schema) and the vocabulary
# tables. Additional key-value pairs can be added here if you have
# custom ORM tables, for which you would like to have dynamic schema
# names.
schema_translate_map:
  cdm_schema: 'cdm_torino'
  vocabulary_schema: 'vocab'

run_options:
  # Add option for CDM version choice? (not implemented yet) E.g.
  cdm: 'cdm531'
  # explain param (not implemented yet)
  source_data_folder: './resources/source_data'
  # add option for loading the regular OMOP vocabularies? (not implemented yet)
  # ask for confirmation?
  skip_vocabulary_loading: True
  # concept_id > 2b (not implemented yet)
  skip_custom_vocabulary_loading: False
  # STCM files (not implemented yet)
  skip_source_to_concept_map_loading: False
  # Insert ORM objects using SQLAlchemy's bulk_save_objects. This
  # will improve the performance of saving ORM objects. The downside is
  # that neither updated, nor new objects added via relationships will
  # be captured in the processing statistics.
  bulk_mode: False
  # Write two additional tsv files in the logs folder, with more
  # detailed information on source data counts and ETL transformations.
  write_reports: False
  # Generate more extensive logging output
  debug_mode: False

# sql_parameters are optional. They can be used together with parameterized
# raw SQL queries, of which the placeholders (e.g. schema names, values)
# indicated by an "@" will be replaced with the actual values before execution.
# Items from the schema_translate_map, will automatically be be added to
# the sql_parameters, but can be overruled here.
sql_parameters:
#placeholder: 'value'
